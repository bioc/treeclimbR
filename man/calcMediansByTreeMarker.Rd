% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diffcyt_calcMediansByTreeMarker.R
\name{calcMediansByTreeMarker}
\alias{calcMediansByTreeMarker}
\title{Calculate medians (by nodes (clusters) of a tree and marker)}
\usage{
calcMediansByTreeMarker(d_se, tree)
}
\arguments{
\item{d_se}{Data object from previous steps, in
\code{\link[TreeSummarizedExperiment]{TreeSummarizedExperiment}} format,
containing cluster labels as a column in the row meta-data (from
\code{\link[diffcyt]{generateClusters}}). Column meta-data is assumed to
contain a factor \code{marker_class}.}

\item{tree}{A phylo object from \code{\link{buildTree}}}
}
\value{
a \code{\link[TreeSummarizedExperiment]{TreeSummarizedExperiment}}
  object. Clusters (or nodes of a tree) are in rows and markers in columns.
  The marker expression values are in \code{assay} and the \code{metadata}
  slot contains variables \code{id_type_markers}
}
\description{
\code{calcMediansByTreeMarker} calculates medians for each cluster-marker
combination. A cluster is represented by a node on the tree. This is a tree
version of \code{\link[diffcyt]{calcMediansByClusterMarker}}. The clusters
used in \code{\link[diffcyt]{calcMediansByClusterMarker}} are clusters on the
leaf level of the tree here. More details about the data could be found in
\code{\link[diffcyt]{calcMediansByClusterMarker}}.
}
\examples{
# For a complete workflow example demonstrating each step in the 'diffcyt'
# pipeline, see the package vignette.
library(diffcyt)

# Function to create random data (one sample)
d_random <- function(n = 20000, mean = 0, sd = 1, ncol = 20, cofactor = 5) {
  d <- sinh(matrix(rnorm(n, mean, sd), ncol = ncol)) * cofactor
  colnames(d) <- paste0("marker", sprintf("\%02d", 1:ncol))
  d
}

# Create random data (without differential signal)
set.seed(123)
d_input <- list(
  sample1 = d_random(),
  sample2 = d_random(),
  sample3 = d_random(),
  sample4 = d_random()
)

experiment_info <- data.frame(
  sample_id = factor(paste0("sample", 1:4)),
  group_id = factor(c("group1", "group1", "group2", "group2")),
  stringsAsFactors = FALSE
)

marker_info <- data.frame(
  channel_name = paste0("channel", sprintf("\%03d", 1:20)),
  marker_name = paste0("marker", sprintf("\%02d", 1:20)),
  marker_class = factor(c(rep("type", 10), rep("state", 10)),
                        levels = c("type", "state", "none")),
  stringsAsFactors = FALSE
)

# Prepare data
d_se <- prepareData(d_input, experiment_info, marker_info)

# Transform data
d_se <- transformData(d_se)

# Generate clusters
d_se <- generateClusters(d_se)

# build a tree
tr <- buildTree(d_se)

# Calculate medians (by cluster and marker)
d_medians_by_cluster_marker <- calcMediansByTreeMarker(d_se, tr)

}
\author{
Ruizhu Huang
}
